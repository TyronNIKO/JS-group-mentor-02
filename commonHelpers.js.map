{"version":3,"file":"commonHelpers.js","sources":["../src/js/deleteElement.js","../src/js/addElement.js","../src/main.js"],"sourcesContent":["import { getFromLS, setToLS } from './helpers/localstorage.js';\n\nexport function deleteElement(elem, key) {\n  elem.addEventListener('click', e => {\n    if (!e.target.closest('button')) return;\n    const li = e.target.closest('li');\n    const arrTask = getFromLS(key);\n    if (!arrTask) return;\n    const newArr = arrTask.filter(({ id }) => id !== li.id);\n    setToLS(key, newArr);\n    li.remove();\n  });\n}\n","import { getFromLS, setToLS } from './helpers/localstorage.js';\n\nexport function addElement({ id, inputValue, key }) {\n  const arrTask = getFromLS(key) || [];\n  const obj = { id: id, text: inputValue };\n  arrTask.push(obj);\n  setToLS(key, arrTask);\n}\n","import { nanoid } from 'nanoid';\nimport { createLiEl, winMarcup } from './js/render.js';\nimport refs from './js/refs.js';\nimport { LS_KEY } from './js/constants.js';\nimport { deleteElement } from './js/deleteElement.js';\nimport { addElement } from './js/addElement.js';\n\n//TODO-1\n// Напишіть логіку обробнику подій по сабміту\n// При сабміті треба у змінну записувати значення поля інпута\n// Повинна бути перевірка на порожнє поле.\n//TODO-2\n// Напишіть логіку яка з сабміта буде брати значення поля інпут\n// Генерувати елемент списку LI  з текстом і кнопкою Х, у майбутньому це буде кнопка видалення таски\n//TODO-3\n// Написати функцію, яка при сабміті буде зберігати данні в сховище, в сховище повинні додаватись таски, а не перезаписуватись існуюча\n//TODO-4\n//Відформатуйте код таким чином, щоб данні в сховищі зберігались у вигляді об'єкта { id: value, text: value}, розмітка додавалась з айдішніком на елемент списку li, айдішнік генерувати з допомогою бібліотеки nanoid, її треба встановити\n//TODO-4\n// Написати функцію, яка буде при завантаженні сторінки відмальовувати розмітку беручи данні з ЛС\n//TODO-5\n//Створити логіку видалення елементів з сховища та розмітки\n\nrefs.formEl.addEventListener('submit', fooSubmit);\n\nfunction fooSubmit(e) {\n  e.preventDefault();\n  const inputValue = e.target.elements.taskName.value.trim();\n  if (!inputValue) {\n    return;\n  }\n  console.log(inputValue);\n  const id = nanoid(); //=> \"V1StGXR8_Z5jdHi6B-myT\"\n\n  refs.ulEl.insertAdjacentHTML(\n    'beforeend',\n    createLiEl({ text: inputValue, id })\n  );\n  addElement({ inputValue, id, key: LS_KEY });\n  e.target.reset();\n}\nwinMarcup(refs.ulEl, LS_KEY);\ndeleteElement(refs.ulEl, LS_KEY);\n"],"names":["deleteElement","elem","key","li","arrTask","getFromLS","newArr","id","setToLS","addElement","inputValue","obj","refs","fooSubmit","e","nanoid","createLiEl","LS_KEY","winMarcup"],"mappings":"sIAEO,SAASA,EAAcC,EAAMC,EAAK,CACvCD,EAAK,iBAAiB,QAAS,GAAK,CAClC,GAAI,CAAC,EAAE,OAAO,QAAQ,QAAQ,EAAG,OACjC,MAAME,EAAK,EAAE,OAAO,QAAQ,IAAI,EAC1BC,EAAUC,EAAUH,CAAG,EAC7B,GAAI,CAACE,EAAS,OACd,MAAME,EAASF,EAAQ,OAAO,CAAC,CAAE,GAAAG,CAAE,IAAOA,IAAOJ,EAAG,EAAE,EACtDK,EAAQN,EAAKI,CAAM,EACnBH,EAAG,OAAM,CACb,CAAG,CACH,CCVO,SAASM,EAAW,CAAE,GAAAF,EAAI,WAAAG,EAAY,IAAAR,CAAG,EAAI,CAClD,MAAME,EAAUC,EAAUH,CAAG,GAAK,CAAA,EAC5BS,EAAM,CAAE,GAAIJ,EAAI,KAAMG,CAAU,EACtCN,EAAQ,KAAKO,CAAG,EAChBH,EAAQN,EAAKE,CAAO,CACtB,CCgBAQ,EAAK,OAAO,iBAAiB,SAAUC,CAAS,EAEhD,SAASA,EAAUC,EAAG,CACpBA,EAAE,eAAc,EAChB,MAAMJ,EAAaI,EAAE,OAAO,SAAS,SAAS,MAAM,OACpD,GAAI,CAACJ,EACH,OAEF,QAAQ,IAAIA,CAAU,EACtB,MAAMH,EAAKQ,IAEXH,EAAK,KAAK,mBACR,YACAI,EAAW,CAAE,KAAMN,EAAY,GAAAH,CAAE,CAAE,CACvC,EACEE,EAAW,CAAE,WAAAC,EAAY,GAAAH,EAAI,IAAKU,CAAQ,CAAA,EAC1CH,EAAE,OAAO,OACX,CACAI,EAAUN,EAAK,KAAMK,CAAM,EAC3BjB,EAAcY,EAAK,KAAMK,CAAM"}