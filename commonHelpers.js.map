{"version":3,"file":"commonHelpers.js","sources":["../src/js/addElement.js","../src/main.js"],"sourcesContent":["import { getFromLS, setToLS } from './helpers/localstorage.js';\n\nexport function addElement({ id, inputValue, key }) {\n  const arrTask = getFromLS(key) || [];\n  const obj = { id: id, text: inputValue };\n  arrTask.push(obj);\n  setToLS(key, arrTask);\n}\n","import { nanoid } from 'nanoid';\nimport { createLiEl, winMarcup } from './js/render.js';\nimport refs from './js/refs.js';\nimport { LS_KEY } from './js/constants.js';\nimport { deleteElement } from './js/deleteElement.js';\nimport { addElement } from './js/addElement.js';\n\n//TODO-1\n// Напишіть логіку обробнику подій по сабміту\n// При сабміті треба у змінну записувати значення поля інпута\n// Повинна бути перевірка на порожнє поле.\n//TODO-2\n// Напишіть логіку яка з сабміта буде брати значення поля інпут\n// Генерувати елемент списку LI  з текстом і кнопкою Х, у майбутньому це буде кнопка видалення таски\n//TODO-3\n// Написати функцію, яка при сабміті буде зберігати данні в сховище, в сховище повинні додаватись таски, а не перезаписуватись існуюча\n//TODO-4\n//Відформатуйте код таким чином, щоб данні в сховищі зберігались у вигляді об'єкта { id: value, text: value}, розмітка додавалась з айдішніком на елемент списку li, айдішнік генерувати з допомогою бібліотеки nanoid, її треба встановити\n//TODO-4\n// Написати функцію, яка буде при завантаженні сторінки відмальовувати розмітку беручи данні з ЛС\n//TODO-5\n//Створити логіку видалення елементів з сховища та розмітки\n\nrefs.formEl.addEventListener('submit', fooSubmit);\n\nfunction fooSubmit(e) {\n  e.preventDefault();\n  const inputValue = e.target.elements.taskName.value.trim();\n  if (!inputValue) {\n    return;\n  }\n  console.log(inputValue);\n  const id = nanoid(); //=> \"V1StGXR8_Z5jdHi6B-myT\"\n\n  refs.ulEl.insertAdjacentHTML(\n    'beforeend',\n    createLiEl({ text: inputValue, id })\n  );\n  addElement({ inputValue, id, key: LS_KEY });\n  e.target.reset();\n}\nwinMarcup(refs.ulEl, LS_KEY);\ndeleteElement(refs.ulEl, LS_KEY);\n"],"names":["addElement","id","inputValue","key","arrTask","getFromLS","obj","setToLS","refs","fooSubmit","nanoid","createLiEl","LS_KEY","winMarcup","deleteElement"],"mappings":"gMAEO,SAASA,EAAW,CAAE,GAAAC,EAAI,WAAAC,EAAY,IAAAC,CAAG,EAAI,CAClD,MAAMC,EAAUC,EAAUF,CAAG,GAAK,CAAA,EAC5BG,EAAM,CAAE,GAAIL,EAAI,KAAMC,CAAU,EACtCE,EAAQ,KAAKE,CAAG,EAChBC,EAAQJ,EAAKC,CAAO,CACtB,CCgBAI,EAAK,OAAO,iBAAiB,SAAUC,CAAS,EAEhD,SAASA,EAAU,EAAG,CACpB,EAAE,eAAc,EAChB,MAAMP,EAAa,EAAE,OAAO,SAAS,SAAS,MAAM,OACpD,GAAI,CAACA,EACH,OAEF,QAAQ,IAAIA,CAAU,EACtB,MAAMD,EAAKS,IAEXF,EAAK,KAAK,mBACR,YACAG,EAAW,CAAE,KAAMT,EAAY,GAAAD,CAAE,CAAE,CACvC,EACED,EAAW,CAAE,WAAAE,EAAY,GAAAD,EAAI,IAAKW,CAAQ,CAAA,EAC1C,EAAE,OAAO,OACX,CACAC,EAAUL,EAAK,KAAMI,CAAM,EAC3BE,EAAcN,EAAK,KAAMI,CAAM"}